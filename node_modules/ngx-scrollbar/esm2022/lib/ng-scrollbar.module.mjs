import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BidiModule } from '@angular/cdk/bidi';
import { PortalModule } from '@angular/cdk/portal';
import { PlatformModule } from '@angular/cdk/platform';
import { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';
import { NgScrollbar } from './ng-scrollbar';
import { HideNativeScrollbar } from './hide-native-scrollbar/hide-native-scrollbar';
import { NgAttr } from './utils/ng-attr.directive';
import { ResizeSensor } from './resize-sensor/resize-sensor.directive';
import { ThumbYDirective, ThumbXDirective } from './scrollbar/thumb/thumb.directive';
import { TrackXDirective, TrackYDirective } from './scrollbar/track/track.directive';
import { ScrollbarX, ScrollbarY } from './scrollbar/scrollbar.component';
import { ScrollViewport } from './scroll-viewport';
import { NG_SCROLLBAR_OPTIONS } from './ng-scrollbar.model';
import * as i0 from "@angular/core";
export class NgScrollbarModule {
    static withConfig(options) {
        return {
            ngModule: NgScrollbarModule,
            providers: [
                { provide: NG_SCROLLBAR_OPTIONS, useValue: options }
            ]
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.2", ngImport: i0, type: NgScrollbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.1.2", ngImport: i0, type: NgScrollbarModule, declarations: [NgScrollbar,
            ScrollViewport,
            HideNativeScrollbar,
            NgAttr,
            ResizeSensor,
            ThumbYDirective,
            ThumbXDirective,
            TrackXDirective,
            TrackYDirective,
            ScrollbarY,
            ScrollbarX], imports: [CommonModule,
            BidiModule,
            PortalModule,
            PlatformModule,
            SmoothScrollModule], exports: [NgScrollbar,
            ScrollViewport] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.1.2", ngImport: i0, type: NgScrollbarModule, imports: [CommonModule,
            BidiModule,
            PortalModule,
            PlatformModule,
            SmoothScrollModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.2", ngImport: i0, type: NgScrollbarModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        BidiModule,
                        PortalModule,
                        PlatformModule,
                        SmoothScrollModule
                    ],
                    declarations: [
                        NgScrollbar,
                        ScrollViewport,
                        HideNativeScrollbar,
                        NgAttr,
                        ResizeSensor,
                        ThumbYDirective,
                        ThumbXDirective,
                        TrackXDirective,
                        TrackYDirective,
                        ScrollbarY,
                        ScrollbarX
                    ],
                    exports: [
                        NgScrollbar,
                        ScrollViewport
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc2Nyb2xsYmFyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1zY3JvbGxiYXIvc3JjL2xpYi9uZy1zY3JvbGxiYXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUVqRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDcEYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDckYsT0FBTyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN6RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG9CQUFvQixFQUFzQixNQUFNLHNCQUFzQixDQUFDOztBQTRCaEYsTUFBTSxPQUFPLGlCQUFpQjtJQUM1QixNQUFNLENBQUMsVUFBVSxDQUFDLE9BQTJCO1FBQzNDLE9BQU87WUFDTCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLFNBQVMsRUFBRTtnQkFDVCxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFO2FBQ3JEO1NBQ0YsQ0FBQztJQUNKLENBQUM7OEdBUlUsaUJBQWlCOytHQUFqQixpQkFBaUIsaUJBakIxQixXQUFXO1lBQ1gsY0FBYztZQUNkLG1CQUFtQjtZQUNuQixNQUFNO1lBQ04sWUFBWTtZQUNaLGVBQWU7WUFDZixlQUFlO1lBQ2YsZUFBZTtZQUNmLGVBQWU7WUFDZixVQUFVO1lBQ1YsVUFBVSxhQWpCVixZQUFZO1lBQ1osVUFBVTtZQUNWLFlBQVk7WUFDWixjQUFjO1lBQ2Qsa0JBQWtCLGFBZ0JsQixXQUFXO1lBQ1gsY0FBYzsrR0FHTCxpQkFBaUIsWUF4QjFCLFlBQVk7WUFDWixVQUFVO1lBQ1YsWUFBWTtZQUNaLGNBQWM7WUFDZCxrQkFBa0I7OzJGQW9CVCxpQkFBaUI7a0JBMUI3QixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFVBQVU7d0JBQ1YsWUFBWTt3QkFDWixjQUFjO3dCQUNkLGtCQUFrQjtxQkFDbkI7b0JBQ0QsWUFBWSxFQUFFO3dCQUNaLFdBQVc7d0JBQ1gsY0FBYzt3QkFDZCxtQkFBbUI7d0JBQ25CLE1BQU07d0JBQ04sWUFBWTt3QkFDWixlQUFlO3dCQUNmLGVBQWU7d0JBQ2YsZUFBZTt3QkFDZixlQUFlO3dCQUNmLFVBQVU7d0JBQ1YsVUFBVTtxQkFDWDtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsV0FBVzt3QkFDWCxjQUFjO3FCQUNmO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgQmlkaU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9iaWRpJztcclxuaW1wb3J0IHsgUG9ydGFsTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XHJcbmltcG9ydCB7IFBsYXRmb3JtTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BsYXRmb3JtJztcclxuaW1wb3J0IHsgU21vb3RoU2Nyb2xsTW9kdWxlIH0gZnJvbSAnbmd4LXNjcm9sbGJhci9zbW9vdGgtc2Nyb2xsJztcclxuXHJcbmltcG9ydCB7IE5nU2Nyb2xsYmFyIH0gZnJvbSAnLi9uZy1zY3JvbGxiYXInO1xyXG5pbXBvcnQgeyBIaWRlTmF0aXZlU2Nyb2xsYmFyIH0gZnJvbSAnLi9oaWRlLW5hdGl2ZS1zY3JvbGxiYXIvaGlkZS1uYXRpdmUtc2Nyb2xsYmFyJztcclxuaW1wb3J0IHsgTmdBdHRyIH0gZnJvbSAnLi91dGlscy9uZy1hdHRyLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFJlc2l6ZVNlbnNvciB9IGZyb20gJy4vcmVzaXplLXNlbnNvci9yZXNpemUtc2Vuc29yLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFRodW1iWURpcmVjdGl2ZSwgVGh1bWJYRGlyZWN0aXZlIH0gZnJvbSAnLi9zY3JvbGxiYXIvdGh1bWIvdGh1bWIuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVHJhY2tYRGlyZWN0aXZlLCBUcmFja1lEaXJlY3RpdmUgfSBmcm9tICcuL3Njcm9sbGJhci90cmFjay90cmFjay5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBTY3JvbGxiYXJYLCBTY3JvbGxiYXJZIH0gZnJvbSAnLi9zY3JvbGxiYXIvc2Nyb2xsYmFyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNjcm9sbFZpZXdwb3J0IH0gZnJvbSAnLi9zY3JvbGwtdmlld3BvcnQnO1xyXG5pbXBvcnQgeyBOR19TQ1JPTExCQVJfT1BUSU9OUywgTmdTY3JvbGxiYXJPcHRpb25zIH0gZnJvbSAnLi9uZy1zY3JvbGxiYXIubW9kZWwnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBCaWRpTW9kdWxlLFxyXG4gICAgUG9ydGFsTW9kdWxlLFxyXG4gICAgUGxhdGZvcm1Nb2R1bGUsXHJcbiAgICBTbW9vdGhTY3JvbGxNb2R1bGVcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgTmdTY3JvbGxiYXIsXHJcbiAgICBTY3JvbGxWaWV3cG9ydCxcclxuICAgIEhpZGVOYXRpdmVTY3JvbGxiYXIsXHJcbiAgICBOZ0F0dHIsXHJcbiAgICBSZXNpemVTZW5zb3IsXHJcbiAgICBUaHVtYllEaXJlY3RpdmUsXHJcbiAgICBUaHVtYlhEaXJlY3RpdmUsXHJcbiAgICBUcmFja1hEaXJlY3RpdmUsXHJcbiAgICBUcmFja1lEaXJlY3RpdmUsXHJcbiAgICBTY3JvbGxiYXJZLFxyXG4gICAgU2Nyb2xsYmFyWFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgTmdTY3JvbGxiYXIsXHJcbiAgICBTY3JvbGxWaWV3cG9ydFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE5nU2Nyb2xsYmFyTW9kdWxlIHtcclxuICBzdGF0aWMgd2l0aENvbmZpZyhvcHRpb25zOiBOZ1Njcm9sbGJhck9wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5nU2Nyb2xsYmFyTW9kdWxlPiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogTmdTY3JvbGxiYXJNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIHsgcHJvdmlkZTogTkdfU0NST0xMQkFSX09QVElPTlMsIHVzZVZhbHVlOiBvcHRpb25zIH1cclxuICAgICAgXVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19